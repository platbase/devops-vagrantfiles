require './usr/VMs'

Vagrant.configure(2) do |config|
    CONFIG_NAME = File::basename(File::dirname(__FILE__))
 
    config.hostmanager.enabled = true
    config.hostmanager.manage_host = false
    config.hostmanager.manage_guest = true
    config.hostmanager.include_offline = true

    config.vm.box = "ubuntu/focal64"
    
    # Additional sync folder: compatible with inherited Vagrantfile
    config.vm.synced_folder "../../00-base/0010-cluster/var/", "/vagrant-var"
    
    config.vm.provision "shell", inline: "/vagrant-var/boot.sh"
    config.vm.provision "shell", inline: "/vagrant-var/ssh_prepare_publickeys.sh " + VMs.keys().join(" ")
    config.vm.provision "shell", inline: "sudo -u vagrant /vagrant-var/ssh_prepare_publickeys.sh " + VMs.keys().join(" ")
    
    VM_COUNT = 0
    VMs.each do |key, opts|
        _name = key.id2name
        config.vm.define _name do |config|

            config.vm.hostname = _name
            config.vm.network :private_network, ip: opts[:eth1]
            
            if (opts.has_key?(:ports)) then
                opts[:ports].each do |guestPort, hostPort|
                    config.vm.network "forwarded_port", guest: guestPort, host: hostPort
                end
            end

            VM_COUNT += 1
            if (VM_COUNT == VMs.length) then
                config.vm.provision "shell", inline: "/vagrant-var/cluster-ready.sh"
            end
           
            config.vm.provider "virtualbox" do |vb|

                vb.name = "Vagrant." + CONFIG_NAME + "." + _name + "." + Time.new.strftime("%Y-%m-%d-%H%M%S")
                #vb.gui = true
                
                vb.linked_clone = true

                vb.cpus = opts[:cpu]
                vb.memory = opts[:mem]

                # Controls how much CPU time a virtual CPU can use(%)
                if (opts.has_key?(:cpu_cap)) then
                    _cpu_cap = (opts[:cpu_cap]*100).round
                    if (_cpu_cap > 100) then
                        _cpu_cap = 100
                    end
                    vb.customize ["modifyvm", :id, "--cpuexecutioncap", _cpu_cap]
                end

                # Page Fusion - reduces the amount of RAM that is available to a VM
                vb.customize ["modifyvm", :id, "--pagefusion", "on"]
            
                vb.customize ["modifyvm", :id, "--groups", "/Vagrant"]
                vb.customize ["setextradata", :id, "GUI/HideFromManager", "true"]

            end

        end
    end
 
end

